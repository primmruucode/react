def workDir = "./code"
def image_version = params.image_version
def profile_build = params.profile_build
def yamlfile
def image_name
def path_file
properties([
  parameters([
    string(defaultValue: "1.1.1", description: 'Docker Version to build', name: 'image_version', trim: true),
    choice(choices: ['Frontend', 'Backend'], description: 'Select Frontend or Backend to build', name: 'profile_build')
  ])
])
pipeline{
    agent any
    stages{
      stage("Build Docker Image"){
        steps{
          script{
            dir ("${workDir}"){
                if (params.profile_build == 'Frontend') {
                    yamlfile = "front-dep.yaml"
                    image_name = "front-end-wr"
                    path_file = "~/Documents/react/local2/fn/my-react-app"
                } else {
                    yamlfile = "mongo-dep.yaml"
                    image_name = "back-end-wr"
                    path_file = "~/Documents/react/local2/bn"
                }
                echo "############## Build Start ###############"
                echo "Building Docker Image for ${profile_build}"
                echo "With tag primmruuhub/${image_name}:${image_version}"
                sh """
                cd ${path_file}
                docker buildx build --platform linux/amd64 -t primmruuhub/${image_name}:${image_version} .
                docker push primmruuhub/${image_name}:${image_version}
                """

            }
          }
        }
      }
     stage("Update deployment file"){
        steps{
          script{
            dir ("${workDir}"){
                echo "############## Replace Start ###############"
                echo "Replace deployment for for ${profile_build}"
                sh """
                cd ~/Documents/react/local2/dep
                echo "Current version"
                grep 'primmruuhub' ${yamlfile}
                sed -i '' "s|image: primmruuhub/${image_name}:[^ ]*|image: primmruuhub/${image_name}:${image_version}|g" ${yamlfile}
                """
                echo "############## Final YAML ###############"
                sh "cat ${yamlfile}"
                echo "############## Current Version ###############"
                sh "grep 'primmruuhub' ${yamlfile}"
            }
          }
        }
      }
    stage("Apply to kube"){
        steps{
          script{
            dir ("${workDir}"){
                echo "############## Applying to kube ###############"
                sh """
                cd ~/Documents/react/local2/dep
                kubectl get pod
                kubectl apply -f ${yamlfile}
                """
            }
          }
        }
      }
    }
  post {
      cleanup {
          cleanWs()
      }
  }
}